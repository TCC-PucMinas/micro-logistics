// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: communicate/carry.proto

package communicate

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidateCarryByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdClient int64 `protobuf:"varint,1,opt,name=idClient,proto3" json:"idClient,omitempty"`
}

func (x *ValidateCarryByIdRequest) Reset() {
	*x = ValidateCarryByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateCarryByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCarryByIdRequest) ProtoMessage() {}

func (x *ValidateCarryByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCarryByIdRequest.ProtoReflect.Descriptor instead.
func (*ValidateCarryByIdRequest) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{0}
}

func (x *ValidateCarryByIdRequest) GetIdClient() int64 {
	if x != nil {
		return x.IdClient
	}
	return 0
}

type ValidateCarryByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *ValidateCarryByIdResponse) Reset() {
	*x = ValidateCarryByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateCarryByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCarryByIdResponse) ProtoMessage() {}

func (x *ValidateCarryByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCarryByIdResponse.ProtoReflect.Descriptor instead.
func (*ValidateCarryByIdResponse) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{1}
}

func (x *ValidateCarryByIdResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type Carry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Street   string `protobuf:"bytes,3,opt,name=street,proto3" json:"street,omitempty"`
	District string `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
	City     string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country  string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	State    string `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	Number   string `protobuf:"bytes,8,opt,name=number,proto3" json:"number,omitempty"`
	Lat      string `protobuf:"bytes,9,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng      string `protobuf:"bytes,10,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *Carry) Reset() {
	*x = Carry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Carry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Carry) ProtoMessage() {}

func (x *Carry) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Carry.ProtoReflect.Descriptor instead.
func (*Carry) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{2}
}

func (x *Carry) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Carry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Carry) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Carry) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *Carry) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Carry) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Carry) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Carry) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Carry) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *Carry) GetLng() string {
	if x != nil {
		return x.Lng
	}
	return ""
}

type DataCarry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Carry []*Carry `protobuf:"bytes,1,rep,name=carry,proto3" json:"carry,omitempty"`
}

func (x *DataCarry) Reset() {
	*x = DataCarry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataCarry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataCarry) ProtoMessage() {}

func (x *DataCarry) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataCarry.ProtoReflect.Descriptor instead.
func (*DataCarry) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{3}
}

func (x *DataCarry) GetCarry() []*Carry {
	if x != nil {
		return x.Carry
	}
	return nil
}

type CarryListAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CarryListAllRequest) Reset() {
	*x = CarryListAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarryListAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarryListAllRequest) ProtoMessage() {}

func (x *CarryListAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarryListAllRequest.ProtoReflect.Descriptor instead.
func (*CarryListAllRequest) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{4}
}

func (x *CarryListAllRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CarryListAllRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CarryListAllRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CarryListAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *DataCarry `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Page  int64      `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit int64      `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Total int64      `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CarryListAllResponse) Reset() {
	*x = CarryListAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarryListAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarryListAllResponse) ProtoMessage() {}

func (x *CarryListAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarryListAllResponse.ProtoReflect.Descriptor instead.
func (*CarryListAllResponse) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{5}
}

func (x *CarryListAllResponse) GetData() *DataCarry {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CarryListAllResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CarryListAllResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CarryListAllResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateCarryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Street   string `protobuf:"bytes,2,opt,name=street,proto3" json:"street,omitempty"`
	District string `protobuf:"bytes,3,opt,name=district,proto3" json:"district,omitempty"`
	City     string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	Country  string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	State    string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Number   string `protobuf:"bytes,7,opt,name=number,proto3" json:"number,omitempty"`
	Lat      string `protobuf:"bytes,8,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng      string `protobuf:"bytes,9,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *CreateCarryRequest) Reset() {
	*x = CreateCarryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCarryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCarryRequest) ProtoMessage() {}

func (x *CreateCarryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCarryRequest.ProtoReflect.Descriptor instead.
func (*CreateCarryRequest) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCarryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCarryRequest) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *CreateCarryRequest) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *CreateCarryRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CreateCarryRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CreateCarryRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CreateCarryRequest) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *CreateCarryRequest) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *CreateCarryRequest) GetLng() string {
	if x != nil {
		return x.Lng
	}
	return ""
}

type CreateCarryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created bool `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *CreateCarryResponse) Reset() {
	*x = CreateCarryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCarryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCarryResponse) ProtoMessage() {}

func (x *CreateCarryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCarryResponse.ProtoReflect.Descriptor instead.
func (*CreateCarryResponse) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{7}
}

func (x *CreateCarryResponse) GetCreated() bool {
	if x != nil {
		return x.Created
	}
	return false
}

type ValidateCarryCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ValidateCarryCreateRequest) Reset() {
	*x = ValidateCarryCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateCarryCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCarryCreateRequest) ProtoMessage() {}

func (x *ValidateCarryCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCarryCreateRequest.ProtoReflect.Descriptor instead.
func (*ValidateCarryCreateRequest) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{8}
}

func (x *ValidateCarryCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ValidateCarryCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *ValidateCarryCreateResponse) Reset() {
	*x = ValidateCarryCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateCarryCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCarryCreateResponse) ProtoMessage() {}

func (x *ValidateCarryCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCarryCreateResponse.ProtoReflect.Descriptor instead.
func (*ValidateCarryCreateResponse) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{9}
}

func (x *ValidateCarryCreateResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type DeleteCarryByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCarryByIdRequest) Reset() {
	*x = DeleteCarryByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCarryByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCarryByIdRequest) ProtoMessage() {}

func (x *DeleteCarryByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCarryByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteCarryByIdRequest) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteCarryByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCarryByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleted bool `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *DeleteCarryByIdResponse) Reset() {
	*x = DeleteCarryByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCarryByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCarryByIdResponse) ProtoMessage() {}

func (x *DeleteCarryByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCarryByIdResponse.ProtoReflect.Descriptor instead.
func (*DeleteCarryByIdResponse) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteCarryByIdResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type UpdateCarryByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Street   string `protobuf:"bytes,3,opt,name=street,proto3" json:"street,omitempty"`
	District string `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
	City     string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country  string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	State    string `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	Number   string `protobuf:"bytes,8,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *UpdateCarryByIdRequest) Reset() {
	*x = UpdateCarryByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCarryByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCarryByIdRequest) ProtoMessage() {}

func (x *UpdateCarryByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCarryByIdRequest.ProtoReflect.Descriptor instead.
func (*UpdateCarryByIdRequest) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateCarryByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCarryByIdRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCarryByIdRequest) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *UpdateCarryByIdRequest) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *UpdateCarryByIdRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateCarryByIdRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UpdateCarryByIdRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *UpdateCarryByIdRequest) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

type UpdateCarryByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated bool `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *UpdateCarryByIdResponse) Reset() {
	*x = UpdateCarryByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCarryByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCarryByIdResponse) ProtoMessage() {}

func (x *UpdateCarryByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCarryByIdResponse.ProtoReflect.Descriptor instead.
func (*UpdateCarryByIdResponse) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateCarryByIdResponse) GetUpdated() bool {
	if x != nil {
		return x.Updated
	}
	return false
}

type ListOneCarryByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListOneCarryByIdRequest) Reset() {
	*x = ListOneCarryByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOneCarryByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOneCarryByIdRequest) ProtoMessage() {}

func (x *ListOneCarryByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOneCarryByIdRequest.ProtoReflect.Descriptor instead.
func (*ListOneCarryByIdRequest) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{14}
}

func (x *ListOneCarryByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListOneCarryByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Carry *Carry `protobuf:"bytes,1,opt,name=carry,proto3" json:"carry,omitempty"`
}

func (x *ListOneCarryByIdResponse) Reset() {
	*x = ListOneCarryByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communicate_carry_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOneCarryByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOneCarryByIdResponse) ProtoMessage() {}

func (x *ListOneCarryByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communicate_carry_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOneCarryByIdResponse.ProtoReflect.Descriptor instead.
func (*ListOneCarryByIdResponse) Descriptor() ([]byte, []int) {
	return file_communicate_carry_proto_rawDescGZIP(), []int{15}
}

func (x *ListOneCarryByIdResponse) GetCarry() *Carry {
	if x != nil {
		return x.Carry
	}
	return nil
}

var File_communicate_carry_proto protoreflect.FileDescriptor

var file_communicate_carry_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x61,
	0x72, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x18, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x22, 0x31, 0x0a, 0x19, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x22, 0xdf, 0x01, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x22, 0x29, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61,
	0x72, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x79, 0x52, 0x05, 0x63, 0x61, 0x72, 0x72,
	0x79, 0x22, 0x53, 0x0a, 0x13, 0x43, 0x61, 0x72, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x14, 0x43, 0x61, 0x72, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x61, 0x72, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xdc,
	0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x22, 0x2f, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x30,
	0x0a, 0x1a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x33, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72,
	0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x33, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x22, 0xcc, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x6e, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x61,
	0x72, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x43, 0x61, 0x72, 0x72, 0x79, 0x52, 0x05, 0x63, 0x61, 0x72, 0x72, 0x79, 0x32, 0x89, 0x04,
	0x0a, 0x10, 0x43, 0x61, 0x72, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x12, 0x4c, 0x0a, 0x11, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3d, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c,
	0x12, 0x14, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x12, 0x13,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x18, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x6e, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x17, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_communicate_carry_proto_rawDescOnce sync.Once
	file_communicate_carry_proto_rawDescData = file_communicate_carry_proto_rawDesc
)

func file_communicate_carry_proto_rawDescGZIP() []byte {
	file_communicate_carry_proto_rawDescOnce.Do(func() {
		file_communicate_carry_proto_rawDescData = protoimpl.X.CompressGZIP(file_communicate_carry_proto_rawDescData)
	})
	return file_communicate_carry_proto_rawDescData
}

var file_communicate_carry_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_communicate_carry_proto_goTypes = []interface{}{
	(*ValidateCarryByIdRequest)(nil),    // 0: ValidateCarryByIdRequest
	(*ValidateCarryByIdResponse)(nil),   // 1: ValidateCarryByIdResponse
	(*Carry)(nil),                       // 2: Carry
	(*DataCarry)(nil),                   // 3: DataCarry
	(*CarryListAllRequest)(nil),         // 4: CarryListAllRequest
	(*CarryListAllResponse)(nil),        // 5: CarryListAllResponse
	(*CreateCarryRequest)(nil),          // 6: CreateCarryRequest
	(*CreateCarryResponse)(nil),         // 7: CreateCarryResponse
	(*ValidateCarryCreateRequest)(nil),  // 8: ValidateCarryCreateRequest
	(*ValidateCarryCreateResponse)(nil), // 9: ValidateCarryCreateResponse
	(*DeleteCarryByIdRequest)(nil),      // 10: DeleteCarryByIdRequest
	(*DeleteCarryByIdResponse)(nil),     // 11: DeleteCarryByIdResponse
	(*UpdateCarryByIdRequest)(nil),      // 12: UpdateCarryByIdRequest
	(*UpdateCarryByIdResponse)(nil),     // 13: UpdateCarryByIdResponse
	(*ListOneCarryByIdRequest)(nil),     // 14: ListOneCarryByIdRequest
	(*ListOneCarryByIdResponse)(nil),    // 15: ListOneCarryByIdResponse
}
var file_communicate_carry_proto_depIdxs = []int32{
	2,  // 0: DataCarry.carry:type_name -> Carry
	3,  // 1: CarryListAllResponse.data:type_name -> DataCarry
	2,  // 2: ListOneCarryByIdResponse.carry:type_name -> Carry
	0,  // 3: CarryCommunicate.ValidateCarryById:input_type -> ValidateCarryByIdRequest
	4,  // 4: CarryCommunicate.CarryListAll:input_type -> CarryListAllRequest
	6,  // 5: CarryCommunicate.CreateCarry:input_type -> CreateCarryRequest
	14, // 6: CarryCommunicate.ListOneCarryById:input_type -> ListOneCarryByIdRequest
	12, // 7: CarryCommunicate.UpdateCarryById:input_type -> UpdateCarryByIdRequest
	10, // 8: CarryCommunicate.DeleteCarryById:input_type -> DeleteCarryByIdRequest
	8,  // 9: CarryCommunicate.ValidateCarryExist:input_type -> ValidateCarryCreateRequest
	1,  // 10: CarryCommunicate.ValidateCarryById:output_type -> ValidateCarryByIdResponse
	5,  // 11: CarryCommunicate.CarryListAll:output_type -> CarryListAllResponse
	7,  // 12: CarryCommunicate.CreateCarry:output_type -> CreateCarryResponse
	15, // 13: CarryCommunicate.ListOneCarryById:output_type -> ListOneCarryByIdResponse
	13, // 14: CarryCommunicate.UpdateCarryById:output_type -> UpdateCarryByIdResponse
	11, // 15: CarryCommunicate.DeleteCarryById:output_type -> DeleteCarryByIdResponse
	9,  // 16: CarryCommunicate.ValidateCarryExist:output_type -> ValidateCarryCreateResponse
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_communicate_carry_proto_init() }
func file_communicate_carry_proto_init() {
	if File_communicate_carry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_communicate_carry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateCarryByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateCarryByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Carry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataCarry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarryListAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarryListAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCarryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCarryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateCarryCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateCarryCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCarryByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCarryByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCarryByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCarryByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOneCarryByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communicate_carry_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOneCarryByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_communicate_carry_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_communicate_carry_proto_goTypes,
		DependencyIndexes: file_communicate_carry_proto_depIdxs,
		MessageInfos:      file_communicate_carry_proto_msgTypes,
	}.Build()
	File_communicate_carry_proto = out.File
	file_communicate_carry_proto_rawDesc = nil
	file_communicate_carry_proto_goTypes = nil
	file_communicate_carry_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CarryCommunicateClient is the client API for CarryCommunicate service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CarryCommunicateClient interface {
	ValidateCarryById(ctx context.Context, in *ValidateCarryByIdRequest, opts ...grpc.CallOption) (*ValidateCarryByIdResponse, error)
	CarryListAll(ctx context.Context, in *CarryListAllRequest, opts ...grpc.CallOption) (*CarryListAllResponse, error)
	CreateCarry(ctx context.Context, in *CreateCarryRequest, opts ...grpc.CallOption) (*CreateCarryResponse, error)
	ListOneCarryById(ctx context.Context, in *ListOneCarryByIdRequest, opts ...grpc.CallOption) (*ListOneCarryByIdResponse, error)
	UpdateCarryById(ctx context.Context, in *UpdateCarryByIdRequest, opts ...grpc.CallOption) (*UpdateCarryByIdResponse, error)
	DeleteCarryById(ctx context.Context, in *DeleteCarryByIdRequest, opts ...grpc.CallOption) (*DeleteCarryByIdResponse, error)
	ValidateCarryExist(ctx context.Context, in *ValidateCarryCreateRequest, opts ...grpc.CallOption) (*ValidateCarryCreateResponse, error)
}

type carryCommunicateClient struct {
	cc grpc.ClientConnInterface
}

func NewCarryCommunicateClient(cc grpc.ClientConnInterface) CarryCommunicateClient {
	return &carryCommunicateClient{cc}
}

func (c *carryCommunicateClient) ValidateCarryById(ctx context.Context, in *ValidateCarryByIdRequest, opts ...grpc.CallOption) (*ValidateCarryByIdResponse, error) {
	out := new(ValidateCarryByIdResponse)
	err := c.cc.Invoke(ctx, "/CarryCommunicate/ValidateCarryById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carryCommunicateClient) CarryListAll(ctx context.Context, in *CarryListAllRequest, opts ...grpc.CallOption) (*CarryListAllResponse, error) {
	out := new(CarryListAllResponse)
	err := c.cc.Invoke(ctx, "/CarryCommunicate/CarryListAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carryCommunicateClient) CreateCarry(ctx context.Context, in *CreateCarryRequest, opts ...grpc.CallOption) (*CreateCarryResponse, error) {
	out := new(CreateCarryResponse)
	err := c.cc.Invoke(ctx, "/CarryCommunicate/CreateCarry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carryCommunicateClient) ListOneCarryById(ctx context.Context, in *ListOneCarryByIdRequest, opts ...grpc.CallOption) (*ListOneCarryByIdResponse, error) {
	out := new(ListOneCarryByIdResponse)
	err := c.cc.Invoke(ctx, "/CarryCommunicate/ListOneCarryById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carryCommunicateClient) UpdateCarryById(ctx context.Context, in *UpdateCarryByIdRequest, opts ...grpc.CallOption) (*UpdateCarryByIdResponse, error) {
	out := new(UpdateCarryByIdResponse)
	err := c.cc.Invoke(ctx, "/CarryCommunicate/UpdateCarryById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carryCommunicateClient) DeleteCarryById(ctx context.Context, in *DeleteCarryByIdRequest, opts ...grpc.CallOption) (*DeleteCarryByIdResponse, error) {
	out := new(DeleteCarryByIdResponse)
	err := c.cc.Invoke(ctx, "/CarryCommunicate/DeleteCarryById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carryCommunicateClient) ValidateCarryExist(ctx context.Context, in *ValidateCarryCreateRequest, opts ...grpc.CallOption) (*ValidateCarryCreateResponse, error) {
	out := new(ValidateCarryCreateResponse)
	err := c.cc.Invoke(ctx, "/CarryCommunicate/ValidateCarryExist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CarryCommunicateServer is the server API for CarryCommunicate service.
type CarryCommunicateServer interface {
	ValidateCarryById(context.Context, *ValidateCarryByIdRequest) (*ValidateCarryByIdResponse, error)
	CarryListAll(context.Context, *CarryListAllRequest) (*CarryListAllResponse, error)
	CreateCarry(context.Context, *CreateCarryRequest) (*CreateCarryResponse, error)
	ListOneCarryById(context.Context, *ListOneCarryByIdRequest) (*ListOneCarryByIdResponse, error)
	UpdateCarryById(context.Context, *UpdateCarryByIdRequest) (*UpdateCarryByIdResponse, error)
	DeleteCarryById(context.Context, *DeleteCarryByIdRequest) (*DeleteCarryByIdResponse, error)
	ValidateCarryExist(context.Context, *ValidateCarryCreateRequest) (*ValidateCarryCreateResponse, error)
}

// UnimplementedCarryCommunicateServer can be embedded to have forward compatible implementations.
type UnimplementedCarryCommunicateServer struct {
}

func (*UnimplementedCarryCommunicateServer) ValidateCarryById(context.Context, *ValidateCarryByIdRequest) (*ValidateCarryByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateCarryById not implemented")
}
func (*UnimplementedCarryCommunicateServer) CarryListAll(context.Context, *CarryListAllRequest) (*CarryListAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CarryListAll not implemented")
}
func (*UnimplementedCarryCommunicateServer) CreateCarry(context.Context, *CreateCarryRequest) (*CreateCarryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCarry not implemented")
}
func (*UnimplementedCarryCommunicateServer) ListOneCarryById(context.Context, *ListOneCarryByIdRequest) (*ListOneCarryByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOneCarryById not implemented")
}
func (*UnimplementedCarryCommunicateServer) UpdateCarryById(context.Context, *UpdateCarryByIdRequest) (*UpdateCarryByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCarryById not implemented")
}
func (*UnimplementedCarryCommunicateServer) DeleteCarryById(context.Context, *DeleteCarryByIdRequest) (*DeleteCarryByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCarryById not implemented")
}
func (*UnimplementedCarryCommunicateServer) ValidateCarryExist(context.Context, *ValidateCarryCreateRequest) (*ValidateCarryCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateCarryExist not implemented")
}

func RegisterCarryCommunicateServer(s *grpc.Server, srv CarryCommunicateServer) {
	s.RegisterService(&_CarryCommunicate_serviceDesc, srv)
}

func _CarryCommunicate_ValidateCarryById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateCarryByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarryCommunicateServer).ValidateCarryById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CarryCommunicate/ValidateCarryById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarryCommunicateServer).ValidateCarryById(ctx, req.(*ValidateCarryByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarryCommunicate_CarryListAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarryListAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarryCommunicateServer).CarryListAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CarryCommunicate/CarryListAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarryCommunicateServer).CarryListAll(ctx, req.(*CarryListAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarryCommunicate_CreateCarry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCarryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarryCommunicateServer).CreateCarry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CarryCommunicate/CreateCarry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarryCommunicateServer).CreateCarry(ctx, req.(*CreateCarryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarryCommunicate_ListOneCarryById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOneCarryByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarryCommunicateServer).ListOneCarryById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CarryCommunicate/ListOneCarryById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarryCommunicateServer).ListOneCarryById(ctx, req.(*ListOneCarryByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarryCommunicate_UpdateCarryById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCarryByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarryCommunicateServer).UpdateCarryById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CarryCommunicate/UpdateCarryById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarryCommunicateServer).UpdateCarryById(ctx, req.(*UpdateCarryByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarryCommunicate_DeleteCarryById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCarryByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarryCommunicateServer).DeleteCarryById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CarryCommunicate/DeleteCarryById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarryCommunicateServer).DeleteCarryById(ctx, req.(*DeleteCarryByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarryCommunicate_ValidateCarryExist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateCarryCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarryCommunicateServer).ValidateCarryExist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CarryCommunicate/ValidateCarryExist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarryCommunicateServer).ValidateCarryExist(ctx, req.(*ValidateCarryCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CarryCommunicate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CarryCommunicate",
	HandlerType: (*CarryCommunicateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ValidateCarryById",
			Handler:    _CarryCommunicate_ValidateCarryById_Handler,
		},
		{
			MethodName: "CarryListAll",
			Handler:    _CarryCommunicate_CarryListAll_Handler,
		},
		{
			MethodName: "CreateCarry",
			Handler:    _CarryCommunicate_CreateCarry_Handler,
		},
		{
			MethodName: "ListOneCarryById",
			Handler:    _CarryCommunicate_ListOneCarryById_Handler,
		},
		{
			MethodName: "UpdateCarryById",
			Handler:    _CarryCommunicate_UpdateCarryById_Handler,
		},
		{
			MethodName: "DeleteCarryById",
			Handler:    _CarryCommunicate_DeleteCarryById_Handler,
		},
		{
			MethodName: "ValidateCarryExist",
			Handler:    _CarryCommunicate_ValidateCarryExist_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "communicate/carry.proto",
}
