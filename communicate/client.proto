syntax = "proto3";

option go_package = "/communicate";

message ValidateClientByIdRequest {
  int64 idClient = 1;
}

message ValidateClientByIdResponse {
  bool valid = 1;
}

message Client {
  int64 id = 1;
  string name = 2;
  string email = 3;
  string phone = 4;
}

message DataClient {
  repeated Client client = 1;
}

message ClientListAllRequest {
  int64 page = 1;
  int64 limit = 2;
  string name = 3;
}

message ClientListAllResponse {
  DataClient data = 1;
  int64 page = 2;
  int64 limit = 3;
  int64 total = 4;
}

message CreateClientRequest {
  string name = 1;
  string email = 2;
  string phone = 3;
}

message CreateClientResponse {
  bool created = 1;
}

message ValidateClientCreateRequest {
  string name = 1;
  string email = 2;
}

message ValidateClientCreateResponse {
  bool valid = 1;
}

message DeleteClientByIdRequest {
  int64 id = 1;
}

message DeleteClientByIdResponse {
  bool deleted = 1;
}

message UpdateClientByIdRequest{
  int64 id = 1;
  string name = 2;
  string email = 3;
}

message UpdateClientByIdResponse {
  bool updated = 1;
}

message ListOneClientByIdRequest {
  int64 id = 1;
}

message ListOneClientByIdResponse {
    Client client = 1;
}

service ClientCommunicate {
  rpc ValidateClientById (ValidateClientByIdRequest) returns (ValidateClientByIdResponse) {};
  rpc ClientListAll (ClientListAllRequest) returns (ClientListAllResponse) {};
  rpc CreateClient (CreateClientRequest) returns (CreateClientResponse) {};
  rpc ListOneClientById (ListOneClientByIdRequest) returns (ListOneClientByIdResponse) {};
  rpc UpdateClientById (UpdateClientByIdRequest) returns (UpdateClientByIdResponse) {};
  rpc DeleteClientById (DeleteClientByIdRequest) returns (DeleteClientByIdResponse) {};
  rpc ValidateClientExist (ValidateClientCreateRequest) returns (ValidateClientCreateResponse) {};
}
