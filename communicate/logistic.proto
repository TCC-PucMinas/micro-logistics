syntax = "proto3";

option go_package = "/communicate";

message CalulateRequest {
  string idCarring = 1;
  string idClient = 2;
}

message LatAndLong {
  string lat = 1;
  string lng = 2;
}

message CalculateResponse {
  LatAndLong origin = 1;
  LatAndLong destiny  = 2;
  int64 meters = 3;
  int64 duration = 4;
  string HumanReadable = 5;
}

message ValidateCarryingRequest {
  string idCarring = 1;
}

message ValidateCarryingResponse {
  bool valid = 1;
}

message ValidateClientRequest {
  string idClient = 1;
}

message ValidateClientResponse {
  bool valid = 1;
}


message Client {
  int64 id = 1;
  string name = 2;
  string email = 3;
  string phone = 4;
}

message Data {
  repeated Client client = 1;
}

message ClientListAllRequest {
  int64 page = 1;
  int64 limit = 2;
  string name = 3;
}

message ClientListAllResponse {
  Data data = 1;
  int64 page = 2;
  int64 limit = 3;
}

/*
  - Criar uma listar com filtro dos clientes - (ok)
  - Criar uma listagem com filtro dos motorista
*/

service LogisticCommunicate {
  rpc CalculateLogistic (CalulateRequest) returns (CalculateResponse) {};
  rpc ValidateCarringById (ValidateCarryingRequest) returns (ValidateCarryingResponse) {};
  rpc ValidateClientById (ValidateClientRequest) returns (ValidateClientResponse) {};
  rpc ClientListAll (ClientListAllRequest) returns (ClientListAllResponse) {};
}
