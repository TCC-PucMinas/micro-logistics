syntax = "proto3";

option go_package = "/communicate";

message Doc {
    string type = 1;
    string value = 2;
}

message CourieRouteAllRequest {
    int64 page = 1;
    int64 limit = 2;
    bool delivered = 3;
}

message CourierRouteAllResponse {
    DataCourierRoute data = 1;
    int64 page = 2;
    int64 limit = 3;
    int64 total = 4;
  }
  

message DataCourierRoute {
    repeated CourierRoutes courier_route = 1;
}

message Coordenates {
    string Lat = 1;
    string Lng = 2;
}

message Route {
    int64 id = 1;
    int64 idCourier = 2;
    int64 order = 3;
    Coordenates init = 4;
    Coordenates finish = 5;
}


message ClientCr {
    int64 id = 1;
    string name = 2;
}

message DepositCr {
    int64 id = 1;
    string name = 2;
}

message ProductCr {
  int64 id = 1;
  string name = 2;
}


message CourierRoutes {
    int64 id = 1;
    ProductCr Product = 2;
    ClientCr Client = 3;
    DepositCr Deposit = 4;
    bool delivered = 5;
    Doc doc = 6;
    Route route = 7;
}

message Courriers {
    int64 id = 1;
}

message CreateCourierRoutesRequest {
    int64 idDriver = 1;
    repeated Courriers courriers = 2;
}

message CreateCourierRoutesResponse {
    bool Created = 1;
}

message CourierRouteListOneRequest {
    int64 id = 1;
}

message CourierRouteListOneResponse {
    CourierRoutes courier_route = 1;
}


service CourierRouteCommunicate {
    rpc CourierRouteListAll (CourieRouteAllRequest) returns (CourierRouteAllResponse) {};
    rpc CreateCorrierRoute (CreateCourierRoutesRequest) returns (CreateCourierRoutesResponse) {}
    rpc CourierRouteListOne (CourierRouteListOneRequest) returns (CourierRouteListOneResponse) {};
}
